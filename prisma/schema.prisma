// This is your new combined schema.prisma file

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-zod-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Job {
  id             String           @id @default(cuid()) 
  company        String
  title          String
  location       String
  type           JobType
  salary         String
  JobClass       JobClass
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt // Recommended: Use @updatedAt for automatic updates
  JobApplication JobApplication[]
}

model JobApplication {
  id     String @id @default(cuid())
  userId String // This will now link to the NextAuth User model's ID
  jobId  String
  Job    Job    @relation(fields: [jobId], references: [id])
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade) // Recommended: Add onDelete: Cascade
}


model User {
  id            String    @id @default(cuid())
  name          String?   
  email         String?   @unique
  emailVerified DateTime?
  image         String?   

  username      String?   @unique 
  password      String?   

  JobApplication JobApplication[]

  accounts      Account[]
  sessions      Session[]

}


model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}



enum JobClass {
  ACCOUNTING
  CONSTRUCTION
  SALES
  SUPPORT
  IT
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
}